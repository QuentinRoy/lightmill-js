// Vitest Snapshot v1

exports[`asyncReduce with async iterator > rejects if a sync reducers throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
    [
      "test:a,b,",
      "c",
      2,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
    {
      "type": "throw",
      "value": [Error: mock-reducer-error],
    },
  ],
}
`;

exports[`asyncReduce with async iterator > rejects if an async reducers throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
    [
      "test:a,b,",
      "c",
      2,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
    {
      "type": "throw",
      "value": [Error: mock-reducer-error],
    },
  ],
}
`;

exports[`asyncReduce with async iterator > rejects if the iterator throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
  ],
}
`;

exports[`asyncReduce with sync iterator > rejects if a sync reducers throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
    [
      "test:a,b,",
      "c",
      2,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
    {
      "type": "throw",
      "value": [Error: mock-reducer-error],
    },
  ],
}
`;

exports[`asyncReduce with sync iterator > rejects if an async reducers throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
    [
      "test:a,b,",
      "c",
      2,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
    {
      "type": "throw",
      "value": [Error: mock-reducer-error],
    },
  ],
}
`;

exports[`asyncReduce with sync iterator > rejects if the iterator throws 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "test:",
      "a",
      0,
    ],
    [
      "test:a,",
      "b",
      1,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": "test:a,",
    },
    {
      "type": "return",
      "value": "test:a,b,",
    },
  ],
}
`;
